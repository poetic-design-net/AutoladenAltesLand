---
import { client, queries } from '../lib/sanity.ts';

interface Props {
  stats: Array<{
    value: string;
    label: string;
    order?: number;
  }>;
}

const { stats } = Astro.props;

// Kontaktdaten aus Sanity holen für Logo
let kontaktData;
try {
  kontaktData = await client.fetch(queries.kontakt);
} catch (error) {
  console.error('Error fetching kontakt data:', error);
}

// Fallback-Daten wenn Sanity nicht verfügbar
if (!kontaktData) {
  kontaktData = {
    logoUrl: "/logo.png",
    logoAlt: "Autoladen Altes Land Logo"
  };
}
---

<section class="py-16 bg-gradient-to-br from-gray-50 to-white relative overflow-hidden">
  <!-- Logo als Hintergrund-Element -->
  <div class="absolute inset-0 flex items-center justify-center pointer-events-none">
    <img 
      src={kontaktData.logoUrl || "/logo.png"}
      alt=""
      class="w-96 h-96 opacity-[0.03] transform rotate-12"
      loading="lazy"
      decoding="async"
      aria-hidden="true"
    />
  </div>
  
  <!-- Dekorative Elemente -->
  <div class="absolute top-0 right-0 w-64 h-64 bg-brand-green/5 rounded-full blur-3xl"></div>
  <div class="absolute bottom-0 left-0 w-64 h-64 bg-brand-blue/5 rounded-full blur-3xl"></div>
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="grid grid-cols-2 md:grid-cols-4 gap-8">
      {stats.map((stat, index) => (
        <div class="text-center group">
          <div class="relative inline-block">
            <div class="text-4xl md:text-5xl font-bold text-brand-blue mb-2 transition-transform duration-300 group-hover:scale-110">
              {stat.value}
            </div>
            <!-- Subtle highlight on hover -->
            <div class="absolute -inset-4 bg-brand-green/10 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10"></div>
          </div>
          <div class="text-gray-600 font-medium">
            {stat.label}
          </div>
        </div>
      ))}
    </div>
  </div>
</section>